#!/usr/bin/perl
use strict;
use warnings;

my @data = (
    "........5..................................e..3...",
    ".......q...........m................e.............",
    "....m.......................................e.....",
    ".........................................C........",
    ".u.m........................8.....................",
    "...........7......9.......8...........F...s.......",
    "6...q..............................s..............",
    "..................................................",
    "..................................................",
    "..................................................",
    "..........9....................F..................",
    ".................................M....D...........",
    ".........U........................................",
    "..q................................8..............",
    ".......9..........................................",
    "0....6.....................e..Qs...............F..",
    ".................................Q...D............",
    ".0.u....................................2.........",
    "..................................................",
    "........u................Q........................",
    ".....E........1...................................",
    "...n....v....................................3....",
    "......u..0................N.......................",
    "............................................z.....",
    ".........7....U.........4.....Z...Q.....D.....V...",
    "..............n1.........f.................2......",
    "E.............................f..............z....",
    "...E........1.Z.......U......................D....",
    ".......n...v....7Z...N............................",
    "..........7..N.....Zf...........................3.",
    "................................b............V....",
    "............4..................................9..",
    "..n...v........................5................2.",
    ".........v.................5.........S............",
    "..........................s.......................",
    ".....U.........4..C.....................S..V......",
    "..................................................",
    "......................c........b............M.....",
    "...........4.Wc....d.......1.....b.....S..........",
    "..E........c............................5......z..",
    "..............w..C....................SM.2........",
    "........................d.........................",
    "...............c......C3..........................",
    "...............w....W.............................",
    "..................................................",
    ".........d.......B....w...........................",
    "....B.....W.......dw..........................M...",
    "...............W......................N...V.......",
    ".B................................................",
    "....................B...............b............."
);

my @data1 = (
    "............",
    "........0...",
    ".....0......",
    ".......0....",
    "....0.......",
    "......A.....",
    "............",
    "............",
    "........A...",
    ".........A..",
    "............",
    "............"
);

my $part = 2;

my @antennas = ();
my %antidotes = ();

sub IsInRange {
    return ($_[0] >= 0 and $_[0] < @data and $_[1] >= 0 and $_[1] < length($data[0]));
}

sub SpatialHash {
    return ($_[0]*$_[0]) * 32767 + ($_[1]*$_[1]);
}

sub AddAntidotes {
    my $px = $_[0]; my $py = $_[1];
    my $vx = $_[2]; my $vy = $_[3];
    my $inRange;
    
    if ($part eq 2) {
        $antidotes{SpatialHash($px, $py)} = 1;
    }
    
    do {
        $px += $vx;
        $py += $vy;
        
        $inRange = IsInRange($px, $py);
        if ($inRange) {
            $antidotes{SpatialHash($px, $py)} = 1;
        }
    } while ($part eq 2 and $inRange);
}

for (my $y = 0; $y < @data; $y++) {
    for (my $x = 0; $x < length($data[$y]); $x++) {
        my $field = substr($data[$y], $x, 1);
        if ($field ne '.') {
            my $antenna = {
                frequency   => $field,
                posX        => $x,
                posY        => $y
            };
            push(@antennas, $antenna);
        }
    }
}

for (my $i = 0; $i < @antennas; $i++) {
    my $freq0 = $antennas[$i]->{frequency};
    for (my $j = $i + 1; $j < @antennas; $j++) {
        my $freq1 = $antennas[$j]->{frequency};
        if ($freq0 ne $freq1) {
            next;
        }
        
        my $vx = $antennas[$j]->{posX} - $antennas[$i]->{posX};
        my $vy = $antennas[$j]->{posY} - $antennas[$i]->{posY};
        AddAntidotes($antennas[$i]->{posX}, $antennas[$i]->{posY}, -$vx, -$vy);
        AddAntidotes($antennas[$j]->{posX}, $antennas[$j]->{posY},  $vx,  $vy);
    }
}

print(scalar(keys %antidotes));